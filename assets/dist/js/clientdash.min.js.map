{"version":3,"sources":["clientdash.min.js"],"names":["cdAJAX","$","reset_roles","jQuery","append","animate","opacity","data","action","post","ajaxurl","response","alert","location","reload","reset_all_settings","reset_admin_menu","cd-create-admin-menus","populate_nav_menu","total_items","cdData","navMenusAJAX","menu_items","length","completed_items","i","menu_item","menu_item_position","menu_ID","role","progress","Math","round","css","html","window","href","url","hasOwnProperty","cdMain","init","this","disable_drag","click","e","stopPropagation","toggle_switch","close_tip","tips_stop_propogation","updown","id","document","getElementById","style","display","toggle_roles_page","e_self","e_target","siblings","e_toggle","find","toggleClass","dashicons_selected","selectedEl","gridEl","dashicon","attr","removeClass","addClass","closest","dashicons_change","active_widget","val","data-dashicon","class","dash_widgets","sortable","disabled","e_input","prop","show_tips","each","load","setTimeout","cdMenus","modify_max_menu_depth","jQuery_extensions","separator_checkbox","link_checkbox","addItemToMenu","icon_selector","wpNavMenu","menuItem","processMethod","callback","params","menu","nonce","menu-settings-column-nonce","menu-item","menuMarkup","ins","trim","hide","fadeIn","show","hasClass","wait_for_load","is","keypress","which","fn","extend","getItemData","itemType","itemData","fields","field","name","value","updateSharedVars","ui","depth","prev","placeholder","next","item","prevBottom","offset","top","height","nextThreshold","minDepth","menuItemDepth","maxDepth","options","globalMaxDepth","updateCurrentDepth","updateDepthClass","currentDepth","initialMenuMaxDepth","body","className","match","parseInt","updateMenuMaxDepth","depthChange","newDepth","menuMaxDepth","maxChildDepth","menuList","originalDepth","helperHeight","transport","menuEdge","left","isRTL","width","hasChildren","handle","start","parent","children","tempHolder","right","childMenuItems","outerHeight","slice","helper","outerWidth","depthToPx","detach","after","stop","subMenuTitle","menuIcon","insertAfter","shiftDepthClass","registerChange","updateParentMenuItemDBId","effect","refreshKeyboardAccessibility","refreshAdvancedAccessibility","change","prepend","sort","edge","negateIfRTL","pxToDepth","separatorIsParent","icon","new_class","cdPointers","settings","content","align","k","pointer","position","cdWidgets"],"mappings":"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","file":"clientdash.min.js","sourcesContent":["/**\n * AJAX functionality within Client Dash.\n *\n * @package WordPress\n * @subpackage ClientDash\n *\n * @since ClientDash 1.6\n */\nvar cdAJAX;\n(function ($) {\n    cdAJAX = {\n        /**\n         * Calls an AJAX function to reset all role settings.\n         *\n         * @since Client Dash 1.5\n         */\n        reset_roles: function () {\n            // Setup\n            jQuery('body').append('<div id=\"cd-ajax-cover\"></div>');\n            jQuery('#cd-ajax-cover').animate({\n                'opacity': 1\n            }, 200);\n\n            // AJAX\n            var data = {\n                'action': 'cd_reset_roles'\n            };\n\n            jQuery.post(\n                ajaxurl,\n                data,\n                function (response) {\n                    // Notify user\n                    alert(response);\n\n                    // Refresh the page\n                    location.reload();\n                }\n            )\n        },\n        /**\n         * Calls an AJAX function to reset all settings.\n         *\n         * @since Client Dash 1.5\n         */\n        reset_all_settings: function () {\n            // AJAX\n            var data = {\n                'action': 'cd_reset_all_settings'\n            };\n\n            jQuery.post(\n                ajaxurl,\n                data,\n                function (response) {\n                    // Notify user\n                    alert(response);\n                }\n            )\n        },\n        /**\n         * Calls an AJAX function to reset the admin menu.\n         *\n         * @since Client Dash 1.5\n         */\n        reset_admin_menu: function () {\n            // AJAX\n            var data = {\n                'action': 'cd_reset_admin_menu',\n                'cd-create-admin-menus': true\n            };\n\n            jQuery.post(\n                ajaxurl,\n                data,\n                function (response) {\n                    // Notify user\n                    alert(response);\n                }\n            )\n        },\n        /**\n         * Sends off all AJAX requests to populate the nav menu. Also updates the progress bar.\n         *\n         * @since Client Dash 1.6\n         */\n        populate_nav_menu: function () {\n\n            // Get the total number of menu items (excluding children)\n            // And start the completed items at 0\n            var total_items = cdData.navMenusAJAX.menu_items.length,\n                completed_items = 0;\n\n            // Cycle through all menu items data and send them off\n            for (var i = 0; i < total_items; i++) {\n\n                // Prepare our data to send\n                var data = {\n                    action: 'cd_populate_nav_menu',\n                    menu_item: cdData.navMenusAJAX.menu_items[i].menu_item,\n                    menu_item_position: cdData.navMenusAJAX.menu_items[i].menu_item_position,\n                    menu_ID: cdData.navMenusAJAX.menu_ID,\n                    role: cdData.navMenusAJAX.role\n                };\n\n                // Now send it off\n                $.post(\n                    ajaxurl, // already defined\n                    data,\n                    function () {\n\n                        // Update the loader percentage\n                        completed_items++;\n                        var progress = Math.round(((100 / total_items) * completed_items));\n                        $('.cd-progress-bar-inner').css('right', 100 - progress + '%');\n                        $('.cd-progress-bar-percent').html(progress + '%');\n\n                        // If we've cycled though ALL of the menu items, then we're done\n                        if (completed_items == total_items) {\n                            window.location.href = cdData.navMenusAJAX.url;\n                        }\n                    }\n                )\n            }\n        }\n    };\n\n    $(function () {\n\n        // If the navMenusAJAX property is present, then it's time to create some nav menus!\n        if (cdData.hasOwnProperty('navMenusAJAX')) {\n            cdAJAX.populate_nav_menu();\n        }\n    });\n})(jQuery);\n/**\n * Overall base functionality for Client Dash.\n *\n * @package WordPress\n * @subpackage ClientDash\n *\n * @since ClientDash 1.6\n */\nvar cdMain;\n(function ($) {\n    cdMain = {\n        /**\n         * The initialization for ClientDash functionality.\n         *\n         * @since ClientDash 1.4\n         */\n        init: function () {\n            this.disable_drag();\n\n            jQuery('.cd-toggle-switch').click(function (e) {\n                e.stopPropagation();\n                cdMain.toggle_switch(jQuery(this));\n            });\n\n            jQuery('.cd-tip-close').click(function (e) {\n                e.stopPropagation();\n                cdMain.close_tip(jQuery(this));\n            });\n\n            this.tips_stop_propogation();\n        },\n        /**\n         * Hides/shows element with given ID.\n         *\n         * @since Client Dash 1.1\n         *\n         * @param id The ID of the element to hide/show.\n         */\n        updown: function (id) {\n            var e = document.getElementById(id);\n            if (e.style.display == 'block')\n                e.style.display = 'none';\n            else\n                e.style.display = 'block';\n        },\n        /**\n         * Toggles the pages on the Settings -> Roles page.\n         *\n         * @since Client Dash 1.4\n         *\n         * @param e_self\n         */\n        toggle_roles_page: function (e_self) {\n            var e_target = jQuery(e_self).siblings('.cd-display-grid-tab'),\n                e_toggle = jQuery(e_self).find('.cd-up-down');\n\n            // Toggle arrow up and down\n            e_toggle.toggleClass('open');\n\n            // Open/collapse target\n            e_target.toggleClass('hidden');\n        },\n        /**\n         * Updates selected dashicons.\n         *\n         * Used on Settings -> Icons.\n         *\n         * @since Client Dash 1.3\n         *\n         * @param id\n         */\n        dashicons_selected: function (id) {\n            // Set up some variables\n            var selectedEl = jQuery('#cd-dashicons-selections'),\n                gridEl = jQuery('#cd-dashicons-grid'),\n                dashicon = selectedEl.find('.cd-' + id + ' .dashicons').attr('data-dashicon');\n\n            // Remove all active classes\n            selectedEl.find('.dashicons').removeClass('active');\n            gridEl.find('.cd-dashicons-grid-item').removeClass('active');\n\n            // Add active class to correct items\n            selectedEl.find('.cd-' + id + ' .dashicons').addClass('active');\n            gridEl.find('.dashicons.' + dashicon).closest('.cd-dashicons-grid-item').addClass('active');\n        },\n        /**\n         * Changes the dashicon icon when clicking.\n         *\n         * Used on Settings -> Icons.\n         *\n         * @since Client Dash 1.3\n         *\n         * @param dashicon\n         * @param e\n         */\n        dashicons_change: function (dashicon, e) {\n            // Set up some variables\n            var selectedEl = jQuery('#cd-dashicons-selections'),\n                active_widget = selectedEl.find('.dashicons.active').attr('data-widget');\n\n            // Change the value of the hidden input field for updating the option\n            jQuery('#cd_dashicon_' + active_widget).val(dashicon);\n\n            // Update the attributes\n            selectedEl.find('.dashicons.active').attr({\n                'data-dashicon': dashicon,\n                'class': 'dashicons ' + dashicon + ' active'\n            });\n\n            // Remove all active classes\n            jQuery('#cd-dashicons-grid').find('.cd-dashicons-grid-item').removeClass('active');\n\n            // Add the active class to the new active option\n            jQuery(e).closest('.cd-dashicons-grid-item').addClass('active');\n        },\n        /**\n         * Disable the ability to drag dashboard widgets.\n         *\n         * @since Client Dash 1.4\n         */\n        disable_drag: function () {\n            var dash_widgets = jQuery('#dashboard-widgets');\n\n            // Only use on dashboard\n            if (!dash_widgets.length) return;\n\n            // Disable being able to drag widgets\n            dash_widgets.find('.meta-box-sortables').sortable({disabled: true});\n        },\n        /**\n         * Toggles the on/off switches on the Roles page.\n         *\n         * @since Client Dash 1.5\n         *\n         * @param e The supplied object.\n         */\n        toggle_switch: function (e) {\n\n            // Find the hidden input\n            var e_input = e.find('input');\n\n            // Toggle the on and off classes\n            e.toggleClass('on').toggleClass('off');\n\n            // Toggle the disabled attr\n            if (e_input.prop('disabled')) {\n                e_input.prop('disabled', false);\n            } else {\n                e_input.prop('disabled', true);\n            }\n        },\n        /**\n         * Cycles through all tips and shows them on page load.\n         *\n         * @since Client Dash 1.5\n         */\n        show_tips: function () {\n            jQuery('.cd-tip').each(function () {\n                jQuery(this).removeClass('cd-tip-hidden');\n            });\n        },\n        /**\n         * Closes the help tip.\n         *\n         * @since Client Dash 1.5\n         *\n         * @param e The supplied object.\n         */\n        close_tip: function (e) {\n            e.closest('.cd-tip').addClass('cd-tip-hidden');\n        },\n        /**\n         * Make sure clicking on items inside tips don't propogate up the DOM tree.\n         *\n         * @since Client Dash 1.5\n         */\n        tips_stop_propogation: function () {\n            jQuery('.cd-tip *').click(function (e) {\n                e.stopPropagation();\n            });\n        }\n    };\n\n    // Launch on ready\n    $(function () {\n        cdMain.init();\n    });\n    // Launch on page load\n    $(window).load(function () {\n        setTimeout(cdMain.show_tips, 1000);\n    });\n})(jQuery);\n/**\n * Functionality for the admin menu page under settings.\n *\n * The init function is only called when on MY nav menu edit page.\n *\n * @package WordPress\n * @subpackage ClientDash\n *\n * @since ClientDash 1.6\n */\nvar cdMenus;\n(function ($) {\n    cdMenus = {\n        init: function () {\n            this.modify_max_menu_depth();\n            this.jQuery_extensions();\n            this.separator_checkbox();\n            this.link_checkbox();\n            this.addItemToMenu();\n            this.icon_selector();\n        },\n        /**\n         * Replaces wpNavMenu.addItemToMenu() (nav-menu.js:~918).\n         *\n         * I want to use my own save menu function. So I need to replace this function\n         * in order to change the post action.\n         *\n         * @since Client Dash 1.6\n         */\n        addItemToMenu: function () {\n            wpNavMenu.addItemToMenu = function (menuItem, processMethod, callback) {\n                var menu = $('#menu').val(),\n                    nonce = $('#menu-settings-column-nonce').val(),\n                    params;\n\n                processMethod = processMethod || function(){};\n                callback = callback || function(){};\n\n                params = {\n                    'action': 'cd_add_menu_item',\n                    'menu': menu,\n                    'menu-settings-column-nonce': nonce,\n                    'menu-item': menuItem\n                };\n\n                $.post( ajaxurl, params, function(menuMarkup) {\n                    var ins = $('#menu-instructions');\n\n                    menuMarkup = $.trim( menuMarkup ); // Trim leading whitespaces\n                    processMethod(menuMarkup, params);\n\n                    // Make it stand out a bit more visually, by adding a fadeIn\n                    $( 'li.pending' ).hide().fadeIn('slow');\n                    $( '.drag-instructions' ).show();\n                    if( ! ins.hasClass( 'menu-instructions-inactive' ) && ins.siblings().length )\n                        ins.addClass( 'menu-instructions-inactive' );\n\n                    callback();\n                });\n            };\n        },\n        /**\n         * Keeps the checkbox checked! (required by WP AJAX call) Also submit form on enter.\n         *\n         * @since Client Dash 1.6\n         */\n        link_checkbox: function () {\n\n            // Keep checkbox checked\n            $('#submit-custom-link').click(function () {\n                $('#custom-checkbox').prop('checked', true);\n\n                // Clear fields\n                setTimeout(function () {\n                    wait_for_load();\n                }, 50 );\n            });\n\n            // Submit on enter\n            $('#custom-link').find('input[type=\"text\"]').keypress(function (e) {\n                if (e.which == 13) {\n                    $('#submit-custom-link').click();\n\n                    // Clear fields\n                    wait_for_load();\n                }\n            });\n\n            /**\n             * Checks if the spinner is visible, and waits until it's not. Then clears the input fields.\n             *\n             * @since Client Dash 1.6\n             */\n            function wait_for_load() {\n                if ($('#add-custom-links').find('.spinner').is(':visible')) {\n                    setTimeout(wait_for_load, 100);\n                } else {\n                    $('#add-custom-links').find('input[type=\"text\"]').val('');\n                }\n            }\n        },\n        /**\n         * Keeps the checkbox checked! (required by WP AJAX call)\n         *\n         * @since Client Dash 1.6\n         */\n        separator_checkbox: function () {\n            $('#submit-separator').click(function () {\n                $('#separator-checkbox').prop('checked', true);\n            });\n        },\n        /**\n         * Modifies some jQuery extensions that were defined in wpNavMenu.\n         *\n         * getItemData():\n         * I love the people at WP, they're brilliant, but they didn't make interacting with\n         * the edit nav menu api very easy. This is one example. A pre-defined list of allowed\n         * input fields to be passed through AJAX. Sigh. So I've had to override this function\n         * in order to add to the list my own custom input values.\n         *\n         * @since Client Dash 1.6\n         */\n        jQuery_extensions: function () {\n            $.fn.extend({\n                getItemData: function (itemType, id) {\n                    itemType = itemType || 'menu-item';\n\n                    var itemData = {}, i,\n\n                    // The allowed input fields\n                        fields = [\n                            // (removed some)\n                            'menu-item-db-id',\n                            'menu-item-parent-id',\n                            'menu-item-position',\n                            'menu-item-title',\n                            'menu-item-original-title',\n                            'menu-item-url',\n                            'menu-item-classes',\n                            //\n                            // CD added\n                            'menu-item-cd-type',\n                            'menu-item-cd-icon',\n                            'menu-item-cd-page-title',\n                            'menu-item-cd-submenu-parent',\n                            'menu-item-cd-params',\n                            'menu-item-cd-hookname'\n                        ];\n\n                    if (!id && itemType == 'menu-item') {\n                        id = this.find('.menu-item-data-db-id').val();\n                    }\n\n                    if (!id) return itemData;\n\n                    this.find('input').each(function () {\n                        var field;\n                        i = fields.length;\n                        while (i--) {\n                            if (itemType == 'menu-item')\n                                field = fields[i] + '[' + id + ']';\n                            else if (itemType == 'add-menu-item')\n                                field = 'menu-item[' + id + '][' + fields[i] + ']';\n\n                            if (\n                                this.name &&\n                                field == this.name\n                            ) {\n                                itemData[fields[i]] = this.value;\n                            }\n                        }\n                    });\n\n                    return itemData;\n                }\n            });\n        },\n        /**\n         * Modifies the max depth for the sortable nav menu.\n         *\n         * WP Uses an api called \"wpNavMenu\" to do EVERYTHING related to the nav menu\n         * edit screen. Unfortunately, there are no filters are places made available to modify\n         * this script in any way. The property \"wpNavMenu.options.globalMaxDepth\" is the key\n         * here. This property defines the max parent/child depth allowed for dragging/dropping.\n         * The problem is, I can't modify it... So, rather than copy the ENTIRE api and change\n         * that one value, I've only copied out the method \"wpNavMenu.initSortables\", but just\n         * before I've changed \"globalMaxDepth\" to 1 instead of the default of 11.\n         *\n         * IMPORTANT: It is crucial to keep this script up to date.\n         *\n         * @since Client Dash 1.6\n         */\n        modify_max_menu_depth: function () {\n\n            // Reset the max depth HERE (default is 11)\n            wpNavMenu.options.globalMaxDepth = 1;\n\n            var currentDepth = 0, originalDepth, minDepth, maxDepth,\n                prev, next, prevBottom, nextThreshold, helperHeight, transport,\n                menuEdge = wpNavMenu.menuList.offset().left,\n                body = $('body'), maxChildDepth,\n                menuMaxDepth = initialMenuMaxDepth();\n\n            if (0 !== $('#menu-to-edit li').length)\n                $('.drag-instructions').show();\n\n            // Use the right edge if RTL.\n            menuEdge += wpNavMenu.isRTL ? wpNavMenu.menuList.width() : 0;\n\n            // CD Modification {\n            var hasChildren;\n            // } End CD Modification\n\n            wpNavMenu.menuList.sortable({\n                handle: '.menu-item-handle',\n                placeholder: 'sortable-placeholder',\n                start: function (e, ui) {\n                    var height, width, parent, children, tempHolder;\n\n                    // handle placement for rtl orientation\n                    if (wpNavMenu.isRTL)\n                        ui.item[0].style.right = 'auto';\n\n                    transport = ui.item.children('.menu-item-transport');\n\n                    // Set depths. currentDepth must be set before children are located.\n                    originalDepth = ui.item.menuItemDepth();\n                    updateCurrentDepth(ui, originalDepth);\n\n                    // Attach child elements to parent\n                    // Skip the placeholder\n                    parent = ( ui.item.next()[0] == ui.placeholder[0] ) ? ui.item.next() : ui.item;\n                    children = parent.childMenuItems();\n                    transport.append(children);\n\n                    // Update the height of the placeholder to match the moving item.\n                    height = transport.outerHeight();\n                    // If there are children, account for distance between top of children and parent\n                    height += ( height > 0 ) ? (ui.placeholder.css('margin-top').slice(0, -2) * 1) : 0;\n                    height += ui.helper.outerHeight();\n                    helperHeight = height;\n                    height -= 2; // Subtract 2 for borders\n                    ui.placeholder.height(height);\n\n                    // Update the width of the placeholder to match the moving item.\n                    maxChildDepth = originalDepth;\n                    children.each(function () {\n                        var depth = $(this).menuItemDepth();\n                        maxChildDepth = (depth > maxChildDepth) ? depth : maxChildDepth;\n                    });\n                    width = ui.helper.find('.menu-item-handle').outerWidth(); // Get original width\n                    width += wpNavMenu.depthToPx(maxChildDepth - originalDepth); // Account for children\n                    width -= 2; // Subtract 2 for borders\n                    ui.placeholder.width(width);\n\n                    // Update the list of menu items.\n                    tempHolder = ui.placeholder.next();\n                    tempHolder.css('margin-top', helperHeight + 'px'); // Set the margin to absorb the placeholder\n                    ui.placeholder.detach(); // detach or jQuery UI will think the placeholder is a menu item\n                    $(this).sortable('refresh'); // The children aren't sortable. We should let jQ UI know.\n                    ui.item.after(ui.placeholder); // reattach the placeholder.\n                    tempHolder.css('margin-top', 0); // reset the margin\n\n                    // Now that the element is complete, we can update...\n                    updateSharedVars(ui);\n\n                    // CD {\n                    hasChildren = !!children.length;\n                    // } End CD\n                },\n                stop: function (e, ui) {\n                    var children, subMenuTitle, menuIcon,\n                        depthChange = currentDepth - originalDepth;\n\n                    // Return child elements to the list\n                    children = transport.children().insertAfter(ui.item);\n\n                    // Add \"sub menu\" description\n                    subMenuTitle = ui.item.find('.item-title .is-submenu');\n                    if (0 < currentDepth)\n                        subMenuTitle.show();\n                    else\n                        subMenuTitle.hide();\n\n                    // CD {\n                    // Hide or show icon\n                    menuIcon = ui.item.find('.item-title .dashicons');\n                    if (currentDepth == 0)\n                        menuIcon.removeClass('hidden');\n                    else\n                        menuIcon.addClass('hidden');\n                    // } End CD\n\n                    // Update depth classes\n                    if (0 !== depthChange) {\n                        ui.item.updateDepthClass(currentDepth);\n                        children.shiftDepthClass(depthChange);\n                        updateMenuMaxDepth(depthChange);\n                    }\n                    // Register a change\n                    wpNavMenu.registerChange();\n                    // Update the item data.\n                    ui.item.updateParentMenuItemDBId();\n\n                    // address sortable's incorrectly-calculated top in opera\n                    ui.item[0].style.top = 0;\n\n                    // handle drop placement for rtl orientation\n                    if (wpNavMenu.isRTL) {\n                        ui.item[0].style.left = 'auto';\n                        ui.item[0].style.right = 0;\n                    }\n\n                    // CD {\n                    // If is a separator AND was trying to be placed as a child, well, STOP IT!\n                    if (ui.item.hasClass('menu-item-separator') && currentDepth != 0){\n\n                        // Cancel the sort altogether\n                        wpNavMenu.menuList.sortable( 'cancel' );\n\n                        // Reset some other properties that may have been improperly updated\n                        // Make sure it's depth is at base level\n                        ui.item.updateDepthClass(0);\n\n                        // Hide the \"sub item\" message\n                        subMenuTitle.hide();\n\n                        // Get rid of the input data for its parent\n                        ui.item.find('.menu-item-data-parent-id').val('0');\n\n                        // Shake, shake, sh-sh-sh shake it!\n                        ui.item.effect('shake');\n                    }\n\n                    // } End CD\n\n                    wpNavMenu.refreshKeyboardAccessibility();\n                    wpNavMenu.refreshAdvancedAccessibility();\n                },\n                change: function (e, ui) {\n                    // Make sure the placeholder is inside the menu.\n                    // Otherwise fix it, or we're in trouble.\n                    if (!ui.placeholder.parent().hasClass('menu'))\n                        (prev.length) ? prev.after(ui.placeholder) : wpNavMenu.menuList.prepend(ui.placeholder);\n\n                    updateSharedVars(ui);\n                },\n                sort: function (e, ui) {\n                    var offset = ui.helper.offset(),\n                        edge = wpNavMenu.isRTL ? offset.left + ui.helper.width() : offset.left,\n                        depth = wpNavMenu.negateIfRTL * wpNavMenu.pxToDepth(edge - menuEdge);\n\n                    // Check and correct if depth is not within range.\n                    // Also, if the dragged element is dragged upwards over\n                    // an item, shift the placeholder to a child position.\n                    if (depth > maxDepth || offset.top < prevBottom) depth = maxDepth;\n                    else if (depth < minDepth) depth = minDepth;\n\n                    // CD {\n\n                    // Make sure this isn't the child of a separator\n                    var separatorIsParent = false;\n                    $('#menu-to-edit').find('li.menu-item-separator').each(function () {\n\n                        // If next child after separator is the placeholder\n                        // OR if the next child is a helper AND the child after THAT is a placeholder\n                        if ($(this).next('li.sortable-placeholder').length\n                            || $(this).next('li.ui-sortable-helper').next('li.sortable-placeholder').length) {\n                            separatorIsParent = true;\n                        }\n                    });\n\n                    // If doesn't meet requirements, make it a parent\n                    if (depth != currentDepth && !hasChildren && !separatorIsParent)\n                        updateCurrentDepth(ui, depth);\n                    else if (hasChildren || separatorIsParent)\n                        updateCurrentDepth(ui, 0);\n\n                    // } End CD\n\n                    // If we overlap the next element, manually shift downwards\n                    if (nextThreshold && offset.top + helperHeight > nextThreshold) {\n                        next.after(ui.placeholder);\n                        updateSharedVars(ui);\n                        $(this).sortable('refreshPositions');\n                    }\n                }\n            });\n\n            function updateSharedVars(ui) {\n                var depth;\n\n                prev = ui.placeholder.prev();\n                next = ui.placeholder.next();\n\n                // Make sure we don't select the moving item.\n                if (prev[0] == ui.item[0]) prev = prev.prev();\n                if (next[0] == ui.item[0]) next = next.next();\n\n                prevBottom = (prev.length) ? prev.offset().top + prev.height() : 0;\n                nextThreshold = (next.length) ? next.offset().top + next.height() / 3 : 0;\n                minDepth = (next.length) ? next.menuItemDepth() : 0;\n\n                if (prev.length)\n                    maxDepth = ( (depth = prev.menuItemDepth() + 1) > wpNavMenu.options.globalMaxDepth ) ? wpNavMenu.options.globalMaxDepth : depth;\n                else\n                    maxDepth = 0;\n            }\n\n            function updateCurrentDepth(ui, depth) {\n                ui.placeholder.updateDepthClass(depth, currentDepth);\n                currentDepth = depth;\n            }\n\n            function initialMenuMaxDepth() {\n                if (!body[0].className) return 0;\n                var match = body[0].className.match(/menu-max-depth-(\\d+)/);\n                return match && match[1] ? parseInt(match[1], 10) : 0;\n            }\n\n            function updateMenuMaxDepth(depthChange) {\n                var depth, newDepth = menuMaxDepth;\n                if (depthChange === 0) {\n                    return;\n                } else if (depthChange > 0) {\n                    depth = maxChildDepth + depthChange;\n                    if (depth > menuMaxDepth)\n                        newDepth = depth;\n                } else if (depthChange < 0 && maxChildDepth == menuMaxDepth) {\n                    while (!$('.menu-item-depth-' + newDepth, wpNavMenu.menuList).length && newDepth > 0)\n                        newDepth--;\n                }\n                // Update the depth class.\n                body.removeClass('menu-max-depth-' + menuMaxDepth).addClass('menu-max-depth-' + newDepth);\n                menuMaxDepth = newDepth;\n            }\n        },\n        icon_selector: function () {\n\n            // Show on click\n            $('.edit-menu-item-cd-icon').click(function (e) {\n\n                e.stopPropagation();\n\n                if ($(this).is(':focus')) {\n                    $(this).closest('.cd-menu-icon-field').find('.cd-menu-icon-selector').show();\n                }\n            });\n\n            // Hide on click\n            $('body').click(function () {\n                $('.cd-menu-icon-selector').hide();\n            });\n\n            // Use new icon val on click\n            $('.cd-menu-icon-selector').find('li').click(function () {\n\n                var icon = $(this).attr('data-icon'),\n                    new_class = $(this).closest('.menu-item').hasClass('menu-item-depth-1') ? 'dashicons hidden ' + icon : 'dashicons ' + icon;\n\n                $(this).closest('.cd-menu-icon-field').find('input[type=\"text\"]').val(icon);\n\n                $(this).closest('.menu-item').find('.item-title').find('.dashicons').attr('class', new_class);\n            });\n        }\n    };\n\n    $(function () {\n        // Only initialize if on CD page and if the page isn't \"disabled\"\n        if ($('body').hasClass('cd-nav-menu') && !$('#menu-settings-column').hasClass('metabox-holder-disabled')) {\n            cdMenus.init();\n        }\n    });\n})(jQuery);\nvar cdPointers;\n(function($) {\n    cdPointers = {\n        init: function() {\n            $('.cd-pointer').each(function() {\n                var e = $(this),\n                    settings = {\n                        content: 'Client Dash is AWESOME',\n                        edge: 'left',\n                        align: 'center'\n                    };\n\n                // Override any defaults that have been set with data-{prop}\n                for (var k in settings) {\n                    if (settings.hasOwnProperty(k)) {\n                        // Content isn't data, it's html\n                        if ( k == 'content' ) {\n                            settings[k] = e.html();\n                            continue;\n                        }\n                        if (e.attr('data-cd-pointer-' + k)) {\n                            settings[k] = e.attr('data-cd-pointer-' + k);\n                        }\n                    }\n                }\n\n                e.pointer({\n                    content: settings.content,\n                    position: {\n                        edge: settings.edge,\n                        align: settings.align\n                    }\n                }).pointer('open');\n            });\n        }\n    };\n\n    $(function() {\n        cdPointers.init();\n    });\n})(jQuery);\n/**\n * This object contains all functionality for the Settings -> Widgets\n * page.\n *\n * @package WordPress\n * @subpackage ClientDash\n *\n * @since ClientDash 1.6\n */\nvar cdWidgets;\n(function ($) {\n    cdWidgets = {\n        /**\n         * Initialization for the widgets page.\n         *\n         * @since Clientdash 1.5\n         */\n        init: function () {\n\n        }\n    };\n\n    // Launch on ready\n    $(function () {\n        if ($('#cd-widgets').length) {\n            cdWidgets.init();\n        }\n    });\n})(jQuery);"]}